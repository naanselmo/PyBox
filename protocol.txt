-------
Pacotes
-------

-> login 
	-> username
	-> directoryName
	-> files array de com (path, is_directory, last modified)

-> requestFile
	-> file (path)

-> sendFile
	-> file (path, is_directory, content, last modified)

-> logoutPacket
    -> is_reply

---------
Mensagens
---------

-> Header: 
	1 byte para tipo de pacote.
-> Corpo: 
	-> Se login packet: (0)
		-> 1 byte para especificar o tamanho do nome do utilizador. (maximo de caracteres - 256)
		-> 1 byte para especificar o tamanho do nome da diretoria que o utilizador esta a sincronizar. (maximo de caracteres - 256)
		-> 4 bytes para especificar quantos ficheiros estao no cliente. (maximo de ficheiros - 4294967296)
		-> Nome do utilizador
		-> Nome da diretoria
		-> Lista de com o seguinte formato:
			-> 1 byte para especificar o tamanho do path relativo do ficheiro (maximo de caracteres - 256)
			-> 1 byte para especificar se é directory ou file
            -> 4 bytes para Timestamp da ultima data de modificacao
			-> Path relativo do ficheiro


	-> Se requestFile packet: (1)
		-> 1 byte para especificar o tamanho do path relativo do ficheiro (maximo de caracteres - 256)
		-> Path relativo do ficheiro

	-> Se sendFile packet: (2)
		-> 1 byte para especificar o tamanho do path relativo do ficheiro (maximo de caracteres - 256)
		-> 1 byte para especificar se é directory ou file
        -> 4 bytes para Timestamp da ultima data de modificacao
		Se for file:
		    -> 4 bytes para especificar o tamanho do conteudo do ficheiro (maximo de tamanho - 4GB)
		-> Path relativo do ficheiro
		    -> Conteudo do ficheiro

	-> Se logout packet: (3)
	    -> 1 byte para especificar o boolean is_reply

-------------
Funcionamento
-------------

-> Inicial
	-> Client liga ao servidor, mandando um pacote de login, onde especifica o seu username e todos os ficheiros que tem.

	-> Servidor compara os ficheiros do cliente com os que tem. Se não tiver os ficheiros que o cliente tem, então faz um 
	requestFile ao cliente, especificando qual o ficheiro que não tem. O cliente por sua vez, recebe o request e envia o
	ficheiro usando o pacote sendFile.
	Se o cliente não tem ficheiros que o servidor tem, o servidor manda o ficheiro atravês do pacote sendFile.